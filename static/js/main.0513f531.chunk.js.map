{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","reverse","setState","sortBy","reset","this","preparedGoods","goods","visibleGoods","sort","good1","good2","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","ALPABET","LENGTH","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,GAHd,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEI,OAAS,SAACH,GACR,EAAKE,SAAS,CAAEF,cAbpB,EAgBEI,MAAQ,WACN,EAAKF,SAAS,CACZH,YAAY,EACZC,SAAU,KAnBhB,4CAuBE,WAAU,IAAD,OACP,EAAiCK,KAAKP,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdM,EAxDH,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUD,EACZ,EADYA,WAENS,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQX,GACN,KAAK,EACH,OAAOU,EAAME,cAAcD,GAE7B,KAAK,EACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITd,GACFS,EAAaP,UAGRO,EAiCiBM,CACpBlB,EACAS,KAAKP,OAGP,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAoC,IAAxBZ,KAAKP,MAAME,WAE3BkB,QAAS,kBAAM,EAAKf,OAAOR,EAASwB,UANtC,iCAWA,wBACEH,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAyB,IAAbjB,IAEhBkB,QAAS,kBAAM,EAAKf,OAAOR,EAASyB,SANtC,4BAWA,wBACEJ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAA2B,IAAflB,IAEhBmB,QAASb,KAAKJ,QANhB,sBAW0B,IAAxBI,KAAKP,MAAME,UAAkBD,IAC7B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,MAHhB,sBAUJ,6BACE,6BACGE,EAAce,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAhFtC,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0513f531.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case 1:\n        return good1.localeCompare(good2);\n\n      case 2:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortBy = (sortType: number) => {\n    this.setState({ sortType });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: 0,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const preparedGoods = getReorderedGoods(\n      goodsFromServer,\n      this.state,\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': this.state.sortType !== 1 },\n            )}\n            onClick={() => this.sortBy(SortType.ALPABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== 2 },\n            )}\n            onClick={() => this.sortBy(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': isReversed === false },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== 0 || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {preparedGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}